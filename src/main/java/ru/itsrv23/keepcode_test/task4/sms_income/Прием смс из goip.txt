<?php
/*  Прием SMS из GOIP
Исходник https://habr.com/ru/post/258561/

Может потребовать установить пакет
apt-get install php5-pgsql

для проверки результатов по хешу ипользую процедуру a_samael_check_and_insert_sms
*/

$dbconn = pg_connect("host=localhost dbname=taxi2 user=postgres password=root")
    or die('Не удалось соединиться: ' . pg_last_error());


$goip_addr = "http://192.168.0.103:80/"; #Внешний (если работа ведется через интернет) адрес goip. Возможно, придется пробросить порт на роутере, например, 7454 => local_goip_addr:80
$goip_user = "admin";
$goip_password = "admin";

#Это нужно для авторизации на goip-е
$context = stream_context_create(array(
    'http' => array(
        'header'  => "Authorization: Basic " . base64_encode("$goip_user:$goip_password")
    )
));
#получаем сырые данные - html
$data = file_get_contents($goip_addr."/default/en_US/tools.html?type=sms_inbox", false, $context);
#у меня встречались такие косяки, правим
$data = str_replace('\"', '"', $data); //fix
$data = str_replace('\'','', $data); //fix
#выдираем содержимое sms из js-скрипта в html, ключ = каналу sim
preg_match_all("|sms= \[(.*?)\]|is", $data, $sms_dump_arr);


$sms = array();
#первый цикл - по "каналам sim", которые содержат 5 смс-ок, разделенных запятой и в кавычках. То есть в csv.
#Во втором цикле мы с помощью str_getcsv добываем валидно данные уже по каждой смс раздельно.
foreach($sms_dump_arr[1] as $sim_key => $sim_val)
  foreach(str_getcsv($sim_val) as $sms_key => $sms_val) {
      $sms[$sim_key][$sms_key] = explode(',', $sms_val, 3); #ключи 0,1,2 содержат датувремя, номер, текст смс.
      $sms[$sim_key][$sms_key][] = md5($sms_val); #ключ 3 содержит хеш первых трех, для упрощения идентификации sms-ки в дальнейшем
        $cnt_arr =  count($sms[$sim_key][$sms_key]);
        if ($cnt_arr == 4) {
        $arrv_dt = $sms[$sim_key][$sms_key][0];
        $arrv_tel = $sms[$sim_key][$sms_key][1];
        $arrv_text = $sms[$sim_key][$sms_key][2];
        $arrv_md5 = $sms[$sim_key][$sms_key][3];
        // Выполнение SQL-запроса
        $query = "SELECT a_samael_check_and_insert_sms('$arrv_tel','$arrv_text','$arrv_md5')";
        echo $query;
        $result = pg_query($query) or die('Ошибка запроса: ' . pg_last_error());
        echo "$result \n";
        }
}
pg_close($dbconn);

#смотрим результат
#print_r($sms);


#!/bin/sh

PHP=`which php`
$PHP -f /opt/limetaxi/samael_scripts/goip_sms/smsin_goip101.php
$PHP -f /opt/limetaxi/samael_scripts/goip_sms/smsin_goip102.php
sleep 20
$PHP -f /opt/limetaxi/samael_scripts/goip_sms/smsin_goip101.php
$PHP -f /opt/limetaxi/samael_scripts/goip_sms/smsin_goip102.php
sleep 20
$PHP -f /opt/limetaxi/samael_scripts/goip_sms/smsin_goip101.php
$PHP -f /opt/limetaxi/samael_scripts/goip_sms/smsin_goip102.php


# В кронтаб
# Проверка смс из шлюзов goip
*/1 *   * * *   root    /opt/limetaxi/samael_scripts/goip_sms/check_sms.sh 

# Создание таблицы / процедуры

CREATE OR REPLACE FUNCTION public.a_samael_check_and_insert_sms (
  sms_number text,
  sms_text text,
  sms_hash text
)
RETURNS void AS
$body$
DECLARE

BEGIN

	IF 0=(select count (idx) from a_samael_received_sms_goip where md5_hash=sms_hash) THEN
     insert into a_samael_received_sms_goip (num, body, md5_hash) values (sms_number,sms_text,sms_hash);
    END IF; 

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.a_samael_check_and_insert_sms (sms_number text, sms_text text, sms_hash text)
  OWNER TO postgres;







##########################

CREATE TABLE public.a_samael_received_sms_goip (
  idx BIGSERIAL,
  num VARCHAR,
  body VARCHAR,
  amount DOUBLE PRECISION,
  poz INTEGER,
  dt TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT now(),
  auto_idx INTEGER,
  md5_hash TEXT,
  deleted BOOLEAN DEFAULT false,
  CONSTRAINT a_samael_received_sms_test_received_sms_wame_pkey PRIMARY KEY(idx)
) 
WITH (oids = false);

COMMENT ON TABLE public.a_samael_received_sms_goip
IS 'Samael Входящие СМС GOIP';

COMMENT ON COLUMN public.a_samael_received_sms_goip.idx
IS 'IDX';

COMMENT ON COLUMN public.a_samael_received_sms_goip.num
IS 'От кого';

COMMENT ON COLUMN public.a_samael_received_sms_goip.body
IS 'Текст';

COMMENT ON COLUMN public.a_samael_received_sms_goip.amount
IS 'Сумма';

COMMENT ON COLUMN public.a_samael_received_sms_goip.poz
IS 'Позывной';

COMMENT ON COLUMN public.a_samael_received_sms_goip.dt
IS 'Дата';

COMMENT ON COLUMN public.a_samael_received_sms_goip.auto_idx
IS 'Экипаж
ref auto';

COMMENT ON COLUMN public.a_samael_received_sms_goip.md5_hash
IS 'hash';

COMMENT ON COLUMN public.a_samael_received_sms_goip.deleted
IS 'Удалено';



CREATE OR REPLACE FUNCTION public.tg_a_samael_received_sms_goip_af (
)
RETURNS trigger AS
$body$
DECLARE
aidx integer;
sum_with_com numeric(15,2);
comment text;

BEGIN

IF(new.amount>0 and  new.auto_idx>0 ) then
aidx =  (select idx from auto where pozivnoy = new.poz and deleted='f' limit 1);
comment = ('Пополнение Сбербанк СМС: ') || ( select CAST(NEW.body as text)) ;

    sum_with_com = new.amount/100*90;
    perform a_samael_pay (aidx,sum_with_com,comment);

end if;

RETURN NEW;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.tg_a_samael_received_sms_goip_af ()
  OWNER TO postgres;
  
  CREATE OR REPLACE FUNCTION public.tg_a_samael_received_sms_goip_on (
)
RETURNS trigger AS
$body$
DECLARE
v_pozivnoy integer;
BEGIN

IF(
(	new.body like 'Перевод%Сообщение%' or 
	new.body like '%Перевод%Сообщение%' or 
	new.body like '%зачисление%Сообщение%' or 
    new.body like '%Сбербанк Онлайн.%Сообщение%' or 
    new.body like '%Зачисление%Сообщение%' or
    new.body like '%зачислен перевод%' )
 and (new.num like '900' or new.num like '79883341010')
 
 ) then
	if(new.body like 'Перевод%Сообщение%')then
    	new.amount=replace(array_to_string((regexp_matches(new.body,'Перевод (.*?)р')),',', '*'),' ','');
    elsif(new.body like '%Перевод%Сообщение%') then
    	new.amount=replace(array_to_string((regexp_matches(new.body,'Перевод (.*?)р')),',', '*'),' ','');
    elsif(new.body like '%зачисление%Сообщение%') then
    	new.amount=replace(array_to_string((regexp_matches(new.body,'зачисление (.*?)р')),',', '*'),' ','');
	elsif(new.body like '%Зачисление%Сообщение%') then  	
        new.amount=replace(array_to_string((regexp_matches(new.body,'Зачисление (.*?)руб.')),',', '*'),' ','');       
    elsif(new.body like '%Сбербанк Онлайн%Сообщение%') then
    	new.amount=replace(array_to_string((regexp_matches(new.body,'Вам (.*?) RUB')),',', '*'),' ','');
    elsif(new.body like '%зачислен перевод%') then
    	new.amount=replace(array_to_string((regexp_matches(new.body,'перевод (.*?)р')),',', '*'),' ','');
        --amount=  replace(array_to_string((regexp_matches(new.body,'перевод (.*?)р')),',', '*'),' ','');
    end if;
    
	--new.body = replace(new.body,'_','');
	v_pozivnoy=array_to_string((regexp_matches(array_to_string(regexp_matches(new.body,'Сообщение: (\d+)\.'), ',', '*'),'\d+')),',', '*');

    IF v_pozivnoy is null THEN
    v_pozivnoy=array_to_string((regexp_matches(array_to_string(regexp_matches(new.body,'Сообщение: (.*?)\.'), ',', '*'),'\d+')),',', '*');
    END IF;
    IF v_pozivnoy is null THEN
    v_pozivnoy=array_to_string((regexp_matches(array_to_string(regexp_matches(new.body,'Сообщение: _(.*?)_'), ',', '*'),'\d+')),',', '*');
    END IF;
    if(v_pozivnoy>0) then
 		new.poz=v_pozivnoy;
        new.auto_idx=(select idx from auto where pozivnoy = new.poz and deleted='f' limit 1);
	end if;
end if;


RETURN NEW;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

ALTER FUNCTION public.tg_a_samael_received_sms_goip_on ()
  OWNER TO postgres;

CREATE TRIGGER tg_a_samael_received_sms_goip_af
  AFTER INSERT 
  ON public.a_samael_received_sms_goip
  
FOR EACH ROW 
  EXECUTE PROCEDURE public.tg_a_samael_received_sms_goip_af();

CREATE TRIGGER tg_a_samael_received_sms_goip_on
  BEFORE INSERT OR UPDATE 
  ON public.a_samael_received_sms_goip
  
FOR EACH ROW 
  EXECUTE PROCEDURE public.tg_a_samael_received_sms_goip_on();

ALTER TABLE public.a_samael_received_sms_goip
  OWNER TO postgres;